/*
 * Copyright 2011-2015 Numeric Technology
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

$(document).ready(function () {

    // Loading the default globalization pt-BR
    loadGlobalization('pt-BR');
    generateMaskValidators();
    generateDateField();

    $(document).on("click", ".KPFormBody .KPFormControl .KPFormErrorView", function () {
        $(this).css("display", "none");
    });
})

/**
 * Load Scripts responsible for Globalization, in JS.
 * param: key, the key of the language, eg.: pt-BR, en-AU or es
 */
function loadGlobalization(key) {
    if (key !== null) {
        $.getScript("/Assets/Scripts/JQuery/i18n/datepicker-" + key.trim() + ".js");
    }
}

/**
 * runs masks to the form e other things that could be necessary
 */
function generateFormDefaults() {
    generateMaskValidators();
    generateDateField();

    $(".ui-tooltip").remove();
}

/**
* Prototype Methods
*/
String.prototype.replaceAll = function (de, para) {
    var str = this;
    var pos = str.indexOf(de);
    while (pos > -1) {
        str = str.replace(de, para);
        pos = str.indexOf(de);
    }
    return (str);
};

$.fn.center = function (topFix, leftFix) {
    topFix = (typeof topFix === "undefined" ? 0 : topFix);
    leftFix = (typeof leftFix === "undefined" ? 0 : leftFix);

    this.css("position", "absolute");
    this.css("top", (calculateTop(this.outerHeight()) - topFix) + "px");
    this.css("left", (calculateLeft(this.outerWidth()) - leftFix) + "px");

    return this;
}

function maskIt(field, maskName) {
    maskName = maskName.toLowerCase();
    $field = $(field);

    if (maskName.indexOf("datefield") >= 0) {
        $field.mask('99/99/9999');
    } else if (maskName.indexOf("datehourfield") >= 0) {
        $field.mask('99/99/9999 00');
    } else if (maskName.indexOf("dateminutefield") >= 0) {
        $field.mask('99/99/9999 00:00');
    } else if (maskName.indexOf("datetimefield") >= 0) {
        $field.mask('99/99/9999 00:00:00');
    } else if (maskName.indexOf("timefield") >= 0) {
        $field.mask('00:00:00');
    } else if (maskName.indexOf("cpffield") >= 0) {
        $field.mask('999.999.999-99');
    } else if (maskName.indexOf("cnpjfield") >= 0) {
        $field.mask('99.999.999/9999-99');
    } else if (maskName.indexOf("postcodefield") >= 0) {
        $field.mask('99999-999');
    } else if (maskName.indexOf("licenseplatefield") >= 0) {
        $field.mask('AAA-9999');
    } else if (maskName.indexOf("decimalfield") >= 0) {
        // $(field).mask('#.##0,00', { reverse: true, maxlength: false });
        $field.maskMoney({ allowNegative: true, thousands: '.', decimal: ',', affixesStay: true, allowZero: true }).maskMoney("mask");
    } else if (maskName.indexOf("moneyfield") >= 0) {
        $field.maskMoney({ prefix: 'R$ ', allowNegative: true, thousands: '.', decimal: ',', affixesStay: true, allowZero: true }).maskMoney("mask");
    } else if (maskName.indexOf("percentfield") >= 0) {
        // $(field).mask('##0,00%');
        $field.maskMoney({ allowNegative: false, thousands: '.', decimal: ',', affixesStay: true, allowZero: true, suffix: '%' }).maskMoney("mask");
    } else if (maskName.indexOf("telephonefield") >= 0) {
        $field.mask(PhoneMask, {
            onKeyPress: function (phone, e, currentField, options) {
                $(currentField).mask(PhoneMask(phone, e, currentField, options), options);
            }
        });
    } else if (maskName.indexOf("cgcfield") >= 0) {
        $field.mask(CGCMask, {
            onKeyPress: function (cgc, e, currentField, options) {
                $(currentField).mask(CGCMask(cgc, e, currentField, options), options);
            }
        });
    } else if (maskName.indexOf("integerfield") >= 0) {
        $field.on('keyup', function (evt) {
            var value = $(this).val();
            value = value.replace(/[^0-9]+/g, '');
            $(this).val(value);
        });
    }
}

function generateMaskValidators() {
    $('.DateField').mask('99/99/9999');
    $('.DateHourField').mask('99/99/9999 00');
    $('.DateMinuteField').mask('99/99/9999 00:00');
    $('.DateTimeField').mask('99/99/9999 00:00:00');

    // TODO: validar melhor forma de fazer
    $('.KPDateField').mask('99/99/9999');
    $('.KPDateHourField').mask('99/99/9999 00');
    $('.KPDateMinuteField').mask('99/99/9999 00:00');
    $('.KPDateTimeField').mask('99/99/9999 00:00:00');

    $('.TimeField').mask('00:00:00');
    $('.CPFField').mask('999.999.999-99');
    $('.CNPJField').mask('99.999.999/9999-99');
    $('.PostCodeField').mask('99999-999');
    $('.LicensePlateField').mask('AAA-9999');
    $('.DecimalField').maskMoney({ allowNegative: true, thousands: '.', decimal: ',', affixesStay: true, allowZero: true }).maskMoney("mask");
    $(".MoneyField").maskMoney({ prefix: 'R$ ', allowNegative: true, thousands: '.', decimal: ',', affixesStay: true, allowZero: true }).maskMoney("mask");
    $(".PercentField").maskMoney({ allowNegative: false, thousands: '.', decimal: ',', affixesStay: true, allowZero: true, suffix: '%' }).maskMoney("mask");
    // $('.DecimalField').mask('#.##0,00', { reverse: true, maxlength: false });
    //$('.PercentField').mask('##0,00%', { reverse: true });
    $('.IntegerField').on('keyup', function (evt) {
        var value = $(this).val();
        value = value.replace(/[^0-9]+/g, '');
        $(this).val(value);
    });
    $('.TelephoneField').mask(PhoneMask, {
        onKeyPress: function (phone, e, currentField, options) {
            $(currentField).mask(PhoneMask(phone, e, currentField, options), options);
        }
    });

    $('.CGCField').mask(CGCMask, {
        onKeyPress: function (cgc, e, currentField, options) {
            $(currentField).mask(CGCMask(cgc, e, currentField, options), options);
        }
    });
}

function generateDateField() {

    // Jquery DateTime Picker, verificar: http://xdsoft.net/jqplugins/datetimepicker/

    $(".KPDateField, .KPDateHourField, .KPDateMinuteField, .KPDateTimeField").datepicker({
        showOn: "button",
        buttonImage: "/Assets/Imgs/Themes/Default/calendar.png",
        buttonImageOnly: true,
        buttonText: ""
    });
}

var PhoneMask = function (phone, e, currentField, options) {
    if ( !$(currentField).is("input") && (phone == null || phone.trim().length <= 0) ) {
        phone = $(currentField).html();
    }

    if (phone != null && phone.trim().length > 0 && phone !== "&nbsp;") {
        return phone.match(/^(\(?11\)? ?9(5[0-9]|6[0-9]|7[01234569]|8[0-9]|9[0-9])[0-9]{1})/g) ? '(00) 00000-0000' : '(00) 0000-0000';
    }

    return "000) 00000-0000";
};

var CGCMask = function (cgc, e, currentField, options) {
    var mask = (cgc == null || cgc.length > 14 || (cgc.length > 11 && !(cgc.indexOf('.') > -1))) ? '99.999.999/9999-99' : '999.999.999-999999';
    
    if ($(currentField).is("input")) {
        cgc = cgc.replaceAll(".", "").replaceAll("/", "").replaceAll("-", "");
        $(currentField).val(cgc);
    } else {
        cgc = $(currentField).html();
        mask = (cgc == null || cgc.length > 14 || (cgc.length > 11 && !(cgc.indexOf('.') > -1))) ? '99.999.999/9999-99' : '999.999.999-999999';
    }

    return mask;
};

function validateSize(size, defaultValue) {
    if (isNotSetVariable(size) || size <= 0) {
        size = defaultValue;
    }

    return size;
}

function isNotSetVariable(variable) {
    if (typeof variable === "undefined" || isNull(variable)) {
        return true;
    }

    return false;
}

function isEmptyOrNull(variable) {
    if (isNull(variable) || variable.trim().length <= 0) {
        return true;
    }

    return false;
}

function isNull(variable) {
    if (variable == null) {
        return true;
    }

    return false;
}

function setModal(showModal) {
    if (showModal) {
        $("#KPModalComponent").css("display", "block");
    } else {
        $("#KPModalComponent").css("display", "none");
    }
}

function calculateTop(height) {
    return Math.max(0, (($(window).height() - height) / 2) + $(window).scrollTop());
}

function calculateLeft(width) {
    return Math.max(0, (($(window).width() - width) / 2) + $(window).scrollLeft());
}

function setLoading(active) {
    if (active) {
        var loading = $("<div id='KPLoadingModalComponent'></div>").append("<div id='KPLoading'></div>");
        $('.Content').first().append(loading);
    } else {
        $('#KPLoadingModalComponent').remove();
    }
}

function validateGridSelection(event, gridId, showMessage, showLoadingIfTrue) {
    var myGrid = $('#' + gridId);

    if (myGrid.length > 0) {
        var selectedRowId = myGrid.jqGrid('getGridParam', 'selrow')
        if (!isNotSetVariable(selectedRowId) || !isEmptyOrNull(selectedRowId)) {
            if (showLoadingIfTrue) {
                setLoading(true);
            }
            return true;
        }
    }
    event.preventDefault();

    if (showMessage || isNotSetVariable(showMessage)) {
        alert("É necessário selecionar um registro na tabela.");
    }

    return false;
}

function confirmBox(message, type, isModal, showLoadingIfTrue) {
    if (confirm(message)) {
        if (showLoadingIfTrue) {
            setLoading(true);
        }
        return true;
    }

    return false;
}

function alertBox(message, type, isModal) {
    alert(message);
}
